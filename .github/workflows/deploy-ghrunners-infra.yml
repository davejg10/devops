name: deploy-ghrunners-infra
run-name: Terraform deploy ${{ github.event.inputs.app_name }} in ${{ github.event.inputs.environment }}

on:
  schedule:
    - cron: "0 23 * * *"  # Runs every day at 11 PM UTC. Scales the container apps down to 0 for cost savings
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        options: 
          - glb
      app_name:
        type: choice
        description: Application name
        options: 
          - ghrunners
      runners:
        type: choice
        description: Github runner type
        default: ubuntu-latest
        options: 
          - ubuntu-latest
          - self-hosted
    
env:
 ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
 ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
 ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
 ARM_USE_AZUREAD: true
 work_dir: ./iac/${{ github.event.inputs.app_name }}
 DEVOPS_KEY_VAULT_NAME: kv-t-glb-uks-devopsutils
 GITHUB_APP_SECRET_NAME: github-app-key

permissions:
  id-token: write
  contents: read

jobs:
  insert_runner_secret: 
    runs-on: ${{ github.event.inputs.runners }}
    environment: ${{ github.event.inputs.environment }}
    outputs:
      SECRET_URI: ${{ steps.insert_secret.outputs.SECRET_URI }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      
      - name: Make Key Vault public
        if: ${{ github.event.inputs.runners }} != 'self-hosted'
        run: bash ./.github/scripts/make_keyvault_public.sh ${{ env.DEVOPS_KEY_VAULT_NAME }}

      - name: Create a secret in Azure Key Vault
        id: insert_secret
        run: |
          az keyvault secret set --vault-name "${{ env.DEVOPS_KEY_VAULT_NAME }}" --name "${{ env.GITHUB_APP_SECRET_NAME }}" --value "${{ secrets.GH_APP_PRIVATE_KEY }}"
          SECRET_URI=$(az keyvault secret show --vault-name "${{ env.DEVOPS_KEY_VAULT_NAME }}" --name "${{ env.GITHUB_APP_SECRET_NAME }}" --query "id" -o tsv)
          echo "SECRET_URI=$SECRET_URI" >> $GITHUB_OUTPUT
          
      - name: Make Key Vault private
        if: always() && ${{ github.event.inputs.runners }} != 'self-hosted'
        run: bash ./.github/scripts/make_keyvault_private.sh ${{ env.DEVOPS_KEY_VAULT_NAME }}

  terraform_plan:
    needs: insert_runner_secret
    runs-on: ${{ github.event.inputs.runners }}
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: ${{ env.work_dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Terraform
        if:  ${{ github.event.inputs.runners != 'self-hosted' }}
        uses: hashicorp/setup-terraform@v3

      - name: Terraform plan
        uses: davejg10/pipeline_templates/.github/actions/terraform_plan@v1
        with:
          backend_azure_resource_group_name: ${{ vars.backend_azure_resource_group_name }}
          backend_azure_storage_account_name: ${{ vars.backend_azure_storage_account_name }}
          backend_container_name: ${{ github.event.inputs.app_name }}
          environment: ${{ github.event.inputs.environment }}
          work_dir: ${{ env.work_dir }}
          additional_tf_vars: -var "github_app_key_secret_id=${{ needs.insert_runner_secret.outputs.SECRET_URI }}" -var "github_app_key_secret_name=${{ env.GITHUB_APP_SECRET_NAME }}" -var "github_installation_id=${{ vars.GH_INSTALLATION_ID }}" -var "github_app_id=${{ vars.GH_APP_ID }}"
      
  terraform_apply:
    runs-on: ${{ github.event.inputs.runners }}
    environment: ${{ github.event.inputs.environment }}
    needs: terraform_plan
    defaults:
      run:
        working-directory: ${{ env.work_dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Terraform
        if:  ${{ github.event.inputs.runners != 'self-hosted' }}
        uses: hashicorp/setup-terraform@v3

      - name: Terraform apply
        uses: davejg10/pipeline_templates/.github/actions/terraform_apply@v1
        with:
          backend_azure_resource_group_name: ${{ vars.backend_azure_resource_group_name }}
          backend_azure_storage_account_name: ${{ vars.backend_azure_storage_account_name }}
          backend_container_name: ${{ github.event.inputs.app_name }}
          work_dir: ${{ env.work_dir }}